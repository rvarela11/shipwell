{"version":3,"sources":["components/Header/Header.scss","components/App/App.scss","components/CardButton/CardButton.js","containers/AddressCardButton.js","utils/index.js","components/AddressInput/AddressInput.js","actions/index.js","containers/AddressCardInputOrigin.js","containers/AddressCardInputDestination.js","components/AddressCard/AddressCard.js","components/Header/Header.js","components/AddressMap/AddressMap.js","components/UserCard/UserCard.js","components/Results/Results.js","components/App/App.js","reducers/index.js","index.js"],"names":["module","exports","black","white","lightBlue","withStyles","card_button","color","props","classes","label","isCardButtonDisabled","path","react_default","a","createElement","Link","to","className","concat","Button_default","disabled","size","variant","AddressCardButton","connect","state","input_address_Origin","input_address_Destination","isAddressValid_Origin","isAddressValid_Destination","isAddressCardButtonDisabled","CardButton","AddressInput","geocoded_address","isAddressValid","onBlur","onChange","TextField_default","id","fullWidth","error","helperText","margin","e","value","target","slice","type","axios","require","validateAddress","address","dispatch","method","url","data","formatted_address","then","response","payload","resValidateAddress","catch","console","log","disableAddressCardButton","AddressCardInputFrom","geocoded_address_Origin","formattedAddress","AddressCardInputTo","geocoded_address_Destination","theme","address_card","Object","defineProperty","width","height","display","flexDirection","alignItems","breakpoints","between","address_card_content","justifyContent","address_title","textAlign","typography_media_query","fontSize","Card_default","CardContent_default","Typography_default","AddressCardInputOrigin","AddressCardInputDestination","CardActions_default","containers_AddressCardButton","Header","AddressMap","compose","withProps","googleMapURL","loadingElement","style","containerElement","mapElement","withScriptjs","withGoogleMap","lifecycle","componentDidMount","_this","this","_this$props","latitude_address_Origin","longitude_address_Origin","latitude_address_Destination","longitude_address_Destination","google","maps","DirectionsService","route","origin","LatLng","destination","travelMode","TravelMode","DRIVING","status","DirectionsStatus","OK","setState","directions","objectSpread","markers","lib","defaultZoom","suppressMarkers","companyData","userData","user_card","user_card_content","user_title","first_name","last_name","email","phone_number","_companyData$carrier","carrier","display_name","display_primary_email","display_primary_phone_number","CardHeader_default","avatar","Avatar_default","aria-label","title","subheader","AddressResults","react","components_UserCard_UserCard","AddressMap_AddressMap","isMarkerShown","App","getUserData","Array","isArray","length","components_Header_Header","Switch","Route","exact","component","AddressCard","render","Redirect","Results","CircularProgress_default","Component","defaultProps","withRouter","get","headers","Authorization","initialState","store","createStore","_objectSpread2","_objectSpread3","arguments","undefined","action","_action$payload","company","user","_action$payload2","warnings","latitude","longitude","applyMiddleware","thunkMiddleware","createMuiTheme","palette","primary","main","typography","useNextVariants","ReactDOM","react_redux_es","BrowserRouter","core_styles","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ffa50949.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#000\",\"white\":\"#fff\",\"lightBlue\":\"#add8e6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#000\",\"white\":\"#fff\",\"lightBlue\":\"#add8e6\"};","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// @material-ui\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\n// Setting material-ui classes\nconst styles = () => ({\n    card_button: {\n        color: 'white'\n    }\n});\n\nconst CardButton = (props) => {\n    const {\n        classes,\n        label,\n        isCardButtonDisabled,\n        path\n    } = props;\n    return (\n        <Link to={path} className={`link ${isCardButtonDisabled ? 'disable-link' : ''}`}>\n            <Button\n                className={classes.card_button}\n                color=\"primary\"\n                disabled={isCardButtonDisabled}\n                size=\"large\"\n                variant=\"contained\"\n            >\n                {label}\n            </Button>\n        </Link>\n    );\n};\n\nCardButton.propTypes = {\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    isCardButtonDisabled: PropTypes.bool.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(CardButton);\n","// @vendors\nimport { connect } from 'react-redux';\n\n// @components\nimport CardButton from '../components/CardButton/CardButton';\n\n// @utils\nimport { isButtonDisabled } from '../utils';\n\nconst mapStateToProps = state => ({\n    label: 'Search',\n    isCardButtonDisabled: isButtonDisabled(state.input_address_Origin, state.input_address_Destination, state.isAddressValid_Origin, state.isAddressValid_Destination, state.isAddressCardButtonDisabled),\n    path: '/shipwell/results'\n});\n\nconst AddressCardButton = connect(mapStateToProps, null)(CardButton);\n\nexport default AddressCardButton;\n","/* eslint-disable camelcase */\n\n// Disable button when input is blank, has an error, or is onChange\n// This will avoid polluting the database\nexport const isButtonDisabled = (\n    input_address_Origin,\n    input_address_Destination,\n    isAddressValid_Origin,\n    isAddressValid_Destination,\n    isAddressCardButtonDisabled\n) => ((input_address_Origin === '' || input_address_Destination === '') || (!isAddressValid_Origin || !isAddressValid_Destination) || isAddressCardButtonDisabled);\n\n\n// Add ', US' to the Shipwell API validation\nexport const addUSToAddress = (value) => {\n    const addressEnding = value.slice(-4);\n    return (addressEnding === ', US') ? value : `${value}, US`;\n};\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @material-ui\nimport TextField from '@material-ui/core/TextField';\n\n// @utils\nimport { addUSToAddress } from '../../utils';\n\nconst AddressInput = (props) => {\n    const {\n        geocoded_address,\n        isAddressValid,\n        label,\n        onBlur,\n        onChange\n    } = props;\n    return (\n        <TextField\n            id={`${label} Address`}\n            fullWidth\n            error={!isAddressValid}\n            helperText={(!isAddressValid) ? `Did you mean: ${geocoded_address}` : ''}\n            label={label}\n            margin=\"normal\"\n            onBlur={e => onBlur(addUSToAddress(e.target.value))}\n            onChange={e => onChange(e.target.value)}\n            type=\"search\"\n        />\n    );\n};\n\nAddressInput.propTypes = {\n    geocoded_address: PropTypes.string.isRequired,\n    isAddressValid: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default AddressInput;\n","const axios = require('axios');\n\n// Initial GET request to get the user data\n\nexport const RES_USER_DATA = 'RES_USER_DATA';\nexport const resUserData = data => ({\n    type: RES_USER_DATA,\n    payload: data\n});\n\nexport const getUserData = () => (dispatch) => {\n    const URL = 'https://dev-api.shipwell.com/v2/auth/me/ ';\n    const token = '4c4547fe6ad68c57cbac0a8cfbfec35b';\n    axios.get(URL, {\n        headers: {\n            Authorization: `Token ${token}`\n        }\n    })\n        .then(response => dispatch(resUserData(response.data)))\n        .catch(error => console.log('Error', error));\n};\n\n// GET request to validate address\n\nexport const RES_VALIDATE_ADDRESS = 'RES_VALIDATE_ADDRESS';\nexport const resValidateAddress = (data, label) => ({\n    type: RES_VALIDATE_ADDRESS,\n    payload: data,\n    label\n});\n\nexport const validateAddress = (address, label) => (dispatch) => {\n    const URL = 'https://dev-api.shipwell.com/v2/locations/addresses/validate/ ';\n    axios({\n        method: 'post',\n        url: URL,\n        data: {\n            formatted_address: address\n        }\n    })\n        .then(response => dispatch(resValidateAddress(response.data, label)))\n        .catch(error => console.log('Error', error));\n};\n\n// Action to disable button when input triggers onChange\n\nexport const DISABLE_ADDRESS_CARD_BUTTON = 'DISABLE_ADDRESS_CARD_BUTTON';\nexport const disableAddressCardButton = (value, label) => ({\n    type: DISABLE_ADDRESS_CARD_BUTTON,\n    value,\n    label\n});\n","// @vendors\nimport { connect } from 'react-redux';\n\n// @components\nimport AddressInput from '../components/AddressInput/AddressInput';\n\n// @actions\nimport { validateAddress, disableAddressCardButton } from '../actions';\n\nconst mapStateToProps = state => ({\n    label: 'From',\n    geocoded_address: state.geocoded_address_Origin,\n    isAddressValid: state.isAddressValid_Origin\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onBlur: (formattedAddress) => {\n        dispatch(validateAddress(formattedAddress, 'Origin'));\n    },\n    onChange: (value) => {\n        dispatch(disableAddressCardButton(value, 'Origin'));\n    }\n});\n\nconst AddressCardInputFrom = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddressInput);\n\nexport default AddressCardInputFrom;\n","// @vendors\nimport { connect } from 'react-redux';\n\n// @components\nimport AddressInput from '../components/AddressInput/AddressInput';\n\n// @actions\nimport { validateAddress, disableAddressCardButton } from '../actions';\n\nconst mapStateToProps = state => ({\n    label: 'To',\n    geocoded_address: state.geocoded_address_Destination,\n    isAddressValid: state.isAddressValid_Destination\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onBlur: (formattedAddress) => {\n        dispatch(validateAddress(formattedAddress, 'Destination'));\n    },\n    onChange: (value) => {\n        dispatch(disableAddressCardButton(value, 'Destination'));\n    }\n});\n\nconst AddressCardInputTo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddressInput);\n\nexport default AddressCardInputTo;\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// @material-ui\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\n// @components\nimport AddressCardButton from '../../containers/AddressCardButton';\nimport AddressCardInputOrigin from '../../containers/AddressCardInputOrigin';\nimport AddressCardInputDestination from '../../containers/AddressCardInputDestination';\n\n// Setting material-ui classes\nconst styles = theme => ({\n    address_card: {\n        width: '60%',\n        height: '50vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        [theme.breakpoints.between('xs', 'sm')]: {\n            width: '75%'\n        }\n    },\n    address_card_content: {\n        width: '75%',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    address_title: {\n        textAlign: 'center'\n    },\n    typography_media_query: {\n        [theme.breakpoints.between('xs', 'sm')]: {\n            fontSize: '1.25rem'\n        }\n    }\n});\n\nconst AddressCard = (props) => {\n    const { classes } = props;\n    return (\n        <Card className={classes.address_card}>\n            <CardContent className={classes.address_card_content}>\n                <Typography className={`${classes.typography_media_query} ${classes.address_title}`} variant=\"h5\">\n                    Address\n                </Typography>\n                <AddressCardInputOrigin />\n                <AddressCardInputDestination />\n                <CardActions>\n                    <AddressCardButton />\n                </CardActions>\n            </CardContent>\n        </Card>\n    );\n};\n\nAddressCard.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AddressCard);\n","// @vendors\nimport React from 'react';\n\n// @styles\nimport './Header.scss';\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"header__logo\" />\n    </header>\n);\n\nexport default Header;\n","/* eslint-disable camelcase */\n/* global google */\n\n// @vendors\nimport React from 'react';\nimport { compose, withProps, lifecycle } from 'recompose';\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    DirectionsRenderer\n} from 'react-google-maps';\nimport { connect } from 'react-redux';\n\nexport const AddressMap = compose(\n    withProps({\n        googleMapURL: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCtJUNx9yMHeFXIFA2BWIX8z8t007rCpU0&v=3.exp&libraries=geometry,drawing,places',\n        loadingElement: <div style={{ height: '400px' }} />,\n        containerElement: <div style={{ width: '100%' }} />,\n        mapElement: <div style={{ height: '50vh', width: '100%' }} />\n    }),\n    withScriptjs,\n    withGoogleMap,\n    lifecycle({\n        componentDidMount() {\n            const {\n                latitude_address_Origin,\n                longitude_address_Origin,\n                latitude_address_Destination,\n                longitude_address_Destination\n            } = this.props;\n            const directionsService = new google.maps.DirectionsService();\n            directionsService.route({\n                origin: new google.maps.LatLng(latitude_address_Origin, longitude_address_Origin),\n                destination: new google.maps.LatLng(latitude_address_Destination, longitude_address_Destination),\n                travelMode: google.maps.TravelMode.DRIVING\n            }, (response, status) => {\n                if (status === google.maps.DirectionsStatus.OK) {\n                    this.setState({\n                        directions: { ...response },\n                        markers: true\n                    });\n                } else {\n                    console.error(`error fetching directions ${response}`);\n                }\n            });\n        }\n    })\n)((props) => {\n    const { directions, markers } = props;\n    return (\n        <GoogleMap defaultZoom={3}>\n            {directions && <DirectionsRenderer directions={directions} suppressMarkers={markers} />}\n        </GoogleMap>\n    );\n});\n\nconst mapStateToProps = state => ({\n    latitude_address_Origin: state.latitude_address_Origin,\n    longitude_address_Origin: state.longitude_address_Origin,\n    latitude_address_Destination: state.latitude_address_Destination,\n    longitude_address_Destination: state.longitude_address_Destination\n});\n\nexport default connect(mapStateToProps, null)(AddressMap);\n","/* eslint-disable camelcase */\n// @vendors\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// @material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardContent from '@material-ui/core/CardContent';\n\n// @styles\nimport './UserCard.scss';\n\n// Setting material-ui classes\nconst styles = theme => ({\n    user_card: {\n        width: '100%',\n        height: '50vh',\n        display: 'flex',\n        alignItems: 'center'\n    },\n    user_card_content: {\n        width: '75%',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    user_title: {\n        textAlign: 'center'\n    },\n    typography_media_query: {\n        [theme.breakpoints.between('xs', 'sm')]: {\n            fontSize: '1.25rem'\n        }\n    }\n});\n\nexport const UserCard = (props) => {\n    const {\n        classes,\n        companyData,\n        geocoded_address_Origin,\n        geocoded_address_Destination,\n        userData\n    } = props;\n    const {\n        first_name,\n        last_name,\n        email,\n        phone_number\n    } = userData;\n    const {\n        display_name,\n        display_primary_email,\n        display_primary_phone_number\n    } = companyData.carrier;\n    return (\n        <Card className={classes.user_card}>\n            <CardHeader\n                avatar={(\n                    <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                    N\n                    </Avatar>\n                )}\n                title={`${first_name} ${last_name}`}\n                subheader={`${email} ${phone_number}`}\n            />\n            <CardContent className={classes.user_card_content}>\n                <div className=\"route\">\n                    <h4 className=\"route-info-title\">Route</h4>\n                    <h5 className=\"route-info\">{`A: ${geocoded_address_Origin}`}</h5>\n                    <h5 className=\"route-info\">{`B: ${geocoded_address_Destination}`}</h5>\n                    <h4 className=\"route-info-title\">Carrier</h4>\n                    <h5 className=\"route-info\">{display_name}</h5>\n                    <h5 className=\"route-info\">{display_primary_email}</h5>\n                    <h5 className=\"route-info\">{display_primary_phone_number}</h5>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst mapStateToProps = state => ({\n    companyData: state.companyData[0],\n    geocoded_address_Origin: state.geocoded_address_Origin,\n    geocoded_address_Destination: state.geocoded_address_Destination,\n    userData: state.userData[0]\n});\n\nUserCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    companyData: PropTypes.object.isRequired,\n    geocoded_address_Origin: PropTypes.string.isRequired,\n    geocoded_address_Destination: PropTypes.string.isRequired,\n    userData: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, null)(withStyles(styles)(UserCard));\n","// @vendors\nimport React, { Fragment } from 'react';\n\n// @components\nimport AddressMap from '../AddressMap/AddressMap';\nimport UserCard from '../UserCard/UserCard';\n\nconst AddressResults = () => (\n    <Fragment>\n        <UserCard />\n        <AddressMap isMarkerShown />\n    </Fragment>\n);\n\nexport default AddressResults;\n","/* eslint-disable camelcase */\n// @vendors\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    Switch,\n    Route,\n    Redirect,\n    withRouter\n} from 'react-router-dom';\n\n// @material-ui\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// @components\nimport AddressCard from '../AddressCard/AddressCard';\nimport Header from '../Header/Header';\nimport Results from '../Results/Results';\n\n// @actions\nimport { getUserData } from '../../actions';\n\n// @styles\nimport './App.scss';\n\nclass App extends Component {\n    componentDidMount() {\n        const { getUserData } = this.props;\n        getUserData();\n    }\n\n    render() {\n        const { latitude_address_Origin, latitude_address_Destination, userData } = this.props;\n        if (!Array.isArray(userData) || !userData.length) {\n            return (\n                <div className=\"circular-progress\">\n                    <CircularProgress />\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\">\n                <Header />\n                <Switch>\n                    <Fragment>\n                        <div className=\"address-display\">\n                            <Route exact path=\"/shipwell\" component={AddressCard} />\n                            <Route\n                                exact\n                                path=\"/shipwell/results\"\n                                render={() => (\n                                    (latitude_address_Origin === null && latitude_address_Destination === null) ? (\n                                        <Redirect to=\"/shipwell\" />\n                                    ) : (\n                                        <Results />\n                                    )\n                                )}\n                            />\n                        </div>\n                    </Fragment>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    getUserData: () => dispatch(getUserData())\n});\n\nconst mapStateToProps = state => ({\n    companyData: state.companyData,\n    latitude_address_Origin: state.latitude_address_Origin,\n    latitude_address_Destination: state.latitude_address_Destination,\n    userData: state.userData\n});\n\nApp.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    latitude_address_Origin: PropTypes.number,\n    latitude_address_Destination: PropTypes.number,\n    userData: PropTypes.array.isRequired\n};\n\nApp.defaultProps = {\n    latitude_address_Origin: null,\n    latitude_address_Destination: null\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","/* eslint-disable camelcase */\nconst initialState = {\n    companyData: [],\n    geocoded_address_Origin: '',\n    geocoded_address_Destination: '',\n    input_address_Origin: '',\n    input_address_Destination: '',\n    isAddressCardButtonDisabled: true,\n    isAddressValid_Origin: true,\n    isAddressValid_Destination: true,\n    latitude_address_Origin: null,\n    longitude_address_Origin: null,\n    latitude_address_Destination: null,\n    longitude_address_Destination: null,\n    userData: []\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'RES_USER_DATA':\n            const { company, user } = action.payload;\n            return {\n                ...state,\n                companyData: state.companyData.concat(company),\n                userData: state.userData.concat(user)\n            };\n        case 'RES_VALIDATE_ADDRESS':\n            // Setting Origin & Destination eocoded_address and isAddressValid\n            // This will show specific error message if both inputs are being used\n            const { geocoded_address, warnings } = action.payload;\n            const { formatted_address, latitude, longitude } = geocoded_address;\n            const { label } = action;\n            return {\n                ...state,\n                [`geocoded_address_${label}`]: formatted_address,\n                [`isAddressValid_${label}`]: (!Array.isArray(warnings) || !warnings.length),\n                isAddressCardButtonDisabled: false,\n                [`latitude_address_${label}`]: latitude,\n                [`longitude_address_${label}`]: longitude\n            };\n        case 'DISABLE_ADDRESS_CARD_BUTTON':\n            const { value } = action;\n            return {\n                ...state,\n                [`input_address_${action.label}`]: value,\n                isAddressCardButtonDisabled: true\n            };\n        default:\n            return state;\n    }\n};\n","// @vendors\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// @containers\nimport Root from './components/App/App';\n\n// @reducers\nimport { reducer } from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\n// Setting the Material-UI theme\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#72bcd4'\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nconst App = () => (\n    <MuiThemeProvider theme={theme}>\n        <Root />\n    </MuiThemeProvider>\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}